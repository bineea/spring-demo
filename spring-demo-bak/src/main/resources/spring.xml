<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd"
        default-autowire="byType">

<!--    <context:component-scan base-package="my.demo" />-->

    <bean id="default" abstract="true" scope="singleton" class="my.demo.manager.xml.DefaultManagerImpl" autowire="no" lazy-init="true">
        <property name="name" value="defaultName"></property>
        <property name="value" value="defaultValue"></property>
    </bean>

    <bean id="myself" parent="default" class="my.demo.manager.xml.MyselfManagerImpl">
        <property name="value" value="mySelfValue"></property>
    </bean>

<!--    <bean id="defaultStartManagerLocator" class="my.DefaultStartManagerLocator">-->
<!--    </bean>-->

<!--    <bean id="startManager" class="my.StartManagerImpl"-->
<!--          autowire="byType">-->
<!--    </bean>-->

<!--    xml配置bean-->
<!--    1.无参构造-->
<!--    <bean id="helloManagerImpl" class="my.HelloworldManagerImpl">-->
<!--    </bean>-->

<!--    2.静态方法-->
<!--    <bean id="helloManagerImpl" class="my.HelloworldManagerImplFacory" factory-method="getHelloworldManagerImplInstance">-->
<!--    </bean>-->

<!--    3.实例方法-->
    <bean id="createHelloworldManagerImpl" class="my.demo.manager.xml.CreateHelloworldManagerImpl">
    </bean>

    <bean id="helloManagerImpl" factory-bean="createHelloworldManagerImpl" factory-method="getHelloworldManagerImplInstance">
    </bean>

</beans>